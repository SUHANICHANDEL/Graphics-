#include <GL/glut.h>
#include <iostream>
#include <string>
float xmin = -0.5, ymin = -0.5, xmax = 0.5, ymax = 0.5;
float x0, y0, x1, y1;
void renderText(float x, float y, const std::string& text) {
glRasterPos2f(x, y);
for (char c : text) {
glutBitmapCharacter(GLUT_BITMAP_HELVETICA_12, c);
}
}
void liangBarskyLineClip(float x0, float y0, float x1, float y1) {
float dx = x1 - x0;
float dy = y1 - y0;
float p[] = {-dx, dx, -dy, dy};
float q[] = {x0 - xmin, xmax - x0, y0 - ymin, ymax - y0};
float tmin = 0.0, tmax = 1.0;
bool accepted = true;
for (int i = 0; i < 4; i++) {
if (p[i] == 0 && q[i] < 0) {
accepted = false;
break;
}
if (p[i] < 0) {
float r = q[i] / p[i];
tmin = std::max(tmin, r);
} else if (p[i] > 0) {
float r = q[i] / p[i];
tmax = std::min(tmax, r);
}
}
// Draw unclipped portion (original line) in gray
glColor3f(0.5, 0.5, 0.5);
glBegin(GL_LINES);
glVertex2f(x0, y0);
glVertex2f(x1, y1);
glEnd();
if (accepted && tmin < tmax) {
// Compute the clipped line endpoints
float cx0 = x0 + tmin * dx;
float cy0 = y0 + tmin * dy;
float cx1 = x0 + tmax * dx;
float cy1 = y0 + tmax * dy;
// Draw the clipped portion in white
glColor3f(1.0, 1.0, 1.0);
glBegin(GL_LINES);
glVertex2f(cx0, cy0);
glVertex2f(cx1, cy1);
glEnd();
}
}
void display() {
glClear(GL_COLOR_BUFFER_BIT);
// Draw clipping rectangle in red
glColor3f(1.0, 0.0, 0.0);
glBegin(GL_LINE_LOOP);
glVertex2f(xmin, ymin);
glVertex2f(xmax, ymin);
glVertex2f(xmax, ymax);
glVertex2f(xmin, ymax);
glEnd();
// Clip and display the line with different colors for clipped and unclipped portions
liangBarskyLineClip(x0, y0, x1, y1);
// Display name and roll number at the corner
glColor3f(1.0, 1.0, 1.0);
renderText(-0.9f, -0.9f, "SUHANI CHANDEL - 500108261");
glFlush();
}
void init() {
glClearColor(0.0, 0.0, 0.0, 0.0);
}
int main(int argc, char** argv) {
std::cout << "Enter the coordinates for the first point (x0, y0): ";
std::cin >> x0 >> y0;
std::cout << "Enter the coordinates for the second point (x1, y1): ";
std::cin >> x1 >> y1;
glutInit(&argc, argv);
glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
glutInitWindowSize(500, 500);
glutInitWindowPosition(100, 100);
glutCreateWindow("Liang-Barsky Line Clipping ");
init();
glutDisplayFunc(display);
glutMainLoop();
return 0;
}
